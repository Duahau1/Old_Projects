<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="2566" passed="2566">
  <reporter-output>
  </reporter-output>
  <suite name="Hash Table Testing Suite" duration-ms="5145" started-at="2018-10-28T04:15:32Z" finished-at="2018-10-28T04:15:38Z">
    <groups>
    </groups>
    <test name="Hash Table Tests with Default Settings" duration-ms="3009" started-at="2018-10-28T04:15:32Z" finished-at="2018-10-28T04:15:35Z">
      <class name="HashTableTest_10b_C2_removeC2_emptyHashTable_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testContains" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testGetCapacity" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testGetFrequency" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testGetNumDuplicates" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testGetType" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testRemove" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10b_C2_removeC2_emptyHashTable_default.testRemove(HashTableTest_10b_C2_removeC2_emptyHashTable_default.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_default@224edc67]" name="testSize" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10b_C2_removeC2_emptyHashTable_default -->
      <class name="HashTableTest_12d_G6_putH7_G6H7_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testContains_Invalid" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testPut" duration-ms="4" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12d_G6_putH7_G6H7_default.testRemove_Invalid(HashTableTest_12d_G6_putH7_G6H7_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_default@68c4039c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12d_G6_putH7_G6H7_default -->
      <class name="HashTableTest_10h_N13_removeN13_emptyHashTable_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testGetFrequency" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testRemove" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10h_N13_removeN13_emptyHashTable_default.testRemove(HashTableTest_10h_N13_removeN13_emptyHashTable_default.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_default@4501b7af]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_10h_N13_removeN13_emptyHashTable_default -->
      <class name="HashTableTest_12m_F5_putL18_F5L18_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="4" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetNumProbes" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testPut" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12m_F5_putL18_F5L18_default.testRemove_Invalid(HashTableTest_12m_F5_putL18_F5L18_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_default@1e88b3c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12m_F5_putL18_F5L18_default -->
      <class name="HashTableTest_12l_E4_putK17_E4K17_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testRemove_Invalid" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12l_E4_putK17_E4K17_default.testRemove_Invalid(HashTableTest_12l_E4_putK17_E4K17_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_default@77caeb3e]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12l_E4_putK17_E4K17_default -->
      <class name="HashTableTest_12r_K10_putD10_K10D10_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="8" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12r_K10_putD10_K10D10_default.testRemove_Invalid(HashTableTest_12r_K10_putD10_K10D10_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testRemove_Valid" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_default@5c3bd550]" name="testSize" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12r_K10_putD10_K10D10_default -->
      <class name="HashTableTest_12s_L11_putE11_L11E11_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testClear" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetFrequency_Invalid" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="10" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testGetType" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12s_L11_putE11_L11E11_default.testRemove_Invalid(HashTableTest_12s_L11_putE11_L11E11_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_default@91161c7]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12s_L11_putE11_L11E11_default -->
      <class name="HashTableTest_12n_G6_putM19_G6M19_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12n_G6_putM19_G6M19_default.testRemove_Invalid(HashTableTest_12n_G6_putM19_G6M19_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testRemove_Valid" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_default@42d80b78]" name="testSize" duration-ms="3" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12n_G6_putM19_G6M19_default -->
      <class name="HashTableTest_11c_G6_putG6_G6_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_11c_G6_putG6_G6_default.testRemove_Invalid(HashTableTest_11c_G6_putG6_G6_default.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_default@61832929]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_11c_G6_putG6_G6_default -->
      <class name="HashTableTest_12b_C2_putD3_C2D3_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="12" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="3" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetMaxSize" duration-ms="3" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12b_C2_putD3_C2D3_default.testRemove_Invalid(HashTableTest_12b_C2_putD3_C2D3_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testRemove_Valid" duration-ms="10" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_default@26653222]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12b_C2_putD3_C2D3_default -->
      <class name="HashTableTest_10c_E4_removeE4_emptyHashTable_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testGetCapacity" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testGetFrequency" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testRemove" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10c_E4_removeE4_emptyHashTable_default.testRemove(HashTableTest_10c_E4_removeE4_emptyHashTable_default.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_default@14acaea5]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10c_E4_removeE4_emptyHashTable_default -->
      <class name="HashTableTest_12u_N13_putFG13_N13G13_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12u_N13_putFG13_N13G13_default.testRemove_Invalid(HashTableTest_12u_N13_putFG13_N13G13_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_default@6a4f787b]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
      </class> <!-- HashTableTest_12u_N13_putFG13_N13G13_default -->
      <class name="HashTableTest_11d_J9_putJ9_J9_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_11d_J9_putJ9_J9_default.testRemove_Invalid(HashTableTest_11d_J9_putJ9_J9_default.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_default@29774679]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_11d_J9_putJ9_J9_default -->
      <class name="HashTableTest_12k_D3_putJ16_D3J16_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12k_D3_putJ16_D3J16_default.testRemove_Invalid(HashTableTest_12k_D3_putJ16_D3J16_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_default@66a3ffec]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12k_D3_putJ16_D3J16_default -->
      <class name="HashTableTest_01e_emptyHashTable_putM12_M12_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testContains_Invalid" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testGetCapacity" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testGetNumProbes" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testIsEmpty" duration-ms="4" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testPut" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testRemove_Invalid" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_01e_emptyHashTable_putM12_M12_default.testRemove_Invalid(HashTableTest_01e_emptyHashTable_putM12_M12_default.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_default@26be92ad]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_01e_emptyHashTable_putM12_M12_default -->
      <class name="HashTableTest_01a_emptyHashTable_putA0_A0_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testContains_Invalid" duration-ms="4" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testContains_Valid" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testGetCapacity" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testGetFrequency_Valid" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testGetLoadFactor" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testPut" duration-ms="4" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testRemove_Invalid" duration-ms="4" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_01a_emptyHashTable_putA0_A0_default.testRemove_Invalid(HashTableTest_01a_emptyHashTable_putA0_A0_default.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_default@4b9e13df]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_01a_emptyHashTable_putA0_A0_default -->
      <class name="HashTableTest_01c_emptyHashTable_putG6_G6_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testContains_Invalid" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testGetFrequency_Valid" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testGetType" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_01c_emptyHashTable_putG6_G6_default.testRemove_Invalid(HashTableTest_01c_emptyHashTable_putG6_G6_default.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_default@475530b9]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_01c_emptyHashTable_putG6_G6_default -->
      <class name="HashTableTest_12o_H7_putN20_H7N20_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="59" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="7" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12o_H7_putN20_H7N20_default.testRemove_Invalid(HashTableTest_12o_H7_putN20_H7N20_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="testSize" duration-ms="3" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_default@3bfdc050]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12o_H7_putN20_H7N20_default -->
      <class name="HashTableTest_11e_M12_putM12_M12_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_11e_M12_putM12_M12_default.testRemove_Invalid(HashTableTest_11e_M12_putM12_M12_default.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_default@3ffc5af1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_11e_M12_putM12_M12_default -->
      <class name="HashTableTest_12a_A0_putB1_A0B1_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testContains_Valid" duration-ms="4" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="10" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="4" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetNumDuplicates" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12a_A0_putB1_A0B1_default.testRemove_Invalid(HashTableTest_12a_A0_putB1_A0B1_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_default@5e5792a0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12a_A0_putB1_A0B1_default -->
      <class name="HashTableTest_10f_K10_removeK10_emptyHashTable_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testContains" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testGetFrequency" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testRemove" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10f_K10_removeK10_emptyHashTable_default.testRemove(HashTableTest_10f_K10_removeK10_emptyHashTable_default.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_default@59fa1d9b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_10f_K10_removeK10_emptyHashTable_default -->
      <class name="HashTableTest_12f_K10_putL11_K10L11_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="3" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="9" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12f_K10_putL11_K10L11_default.testRemove_Invalid(HashTableTest_12f_K10_putL11_K10L11_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_default@59f99ea]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12f_K10_putL11_K10L11_default -->
      <class name="HashTableTest_12q_J9_putB22_J9B22_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testGetType" duration-ms="5" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testRemove_Invalid" duration-ms="6" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12q_J9_putB22_J9B22_default.testRemove_Invalid(HashTableTest_12q_J9_putB22_J9B22_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_default@5e3a8624]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12q_J9_putB22_J9B22_default -->
      <class name="HashTableTest_10d_G6_removeG6_emptyHashTable_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testGetFrequency" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testRemove" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10d_G6_removeG6_emptyHashTable_default.testRemove(HashTableTest_10d_G6_removeG6_emptyHashTable_default.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_default@46d56d67]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10d_G6_removeG6_emptyHashTable_default -->
      <class name="HashTableTest_0_newTable_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="12" started-at="2018-10-28T04:15:32Z" finished-at="2018-10-28T04:15:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testClear" duration-ms="7" started-at="2018-10-28T04:15:32Z" finished-at="2018-10-28T04:15:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:32Z" finished-at="2018-10-28T04:15:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testContains" duration-ms="6" started-at="2018-10-28T04:15:32Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testGetFrequency" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testGetHash" duration-ms="6" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testGetLoadFactor" duration-ms="5" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testGetMaxSize" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testGetNumDuplicates" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testGetNumProbes" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testGetType" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testIsEmpty" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testPut" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testRemove" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_0_newTable_default.testRemove(HashTableTest_0_newTable_default.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_0_newTable_default@cb5822]" name="testSize" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_0_newTable_default -->
      <class name="HashTableTest_12e_I8_putJ9_I8J9_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetFrequency_Valid" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="3" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="15" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetMaxSize" duration-ms="4" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12e_I8_putJ9_I8J9_default.testRemove_Invalid(HashTableTest_12e_I8_putJ9_I8J9_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_default@ae45eb6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12e_I8_putJ9_I8J9_default -->
      <class name="HashTableTest_12h_A0_putG13_A0G13_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testContains_Valid" duration-ms="5" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="11" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="4" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="3" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="4" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="3" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="10" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetNumDuplicates" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12h_A0_putG13_A0G13_default.testRemove_Invalid(HashTableTest_12h_A0_putG13_A0G13_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testRemove_Valid" duration-ms="3" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_default@6f7fd0e6]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12h_A0_putG13_A0G13_default -->
      <class name="HashTableTest_12c_E4_putF5_E4F5_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testContains_Valid" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="17" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12c_E4_putF5_E4F5_default.testRemove_Invalid(HashTableTest_12c_E4_putF5_E4F5_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testRemove_Valid" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_default@3532ec19]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12c_E4_putF5_E4F5_default -->
      <class name="HashTableTest_10g_M12_removeM12_emptyHashTable_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testContains" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testGetFrequency" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testGetMaxSize" duration-ms="6" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testRemove" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10g_M12_removeM12_emptyHashTable_default.testRemove(HashTableTest_10g_M12_removeM12_emptyHashTable_default.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_default@28d25987]" name="testSize" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10g_M12_removeM12_emptyHashTable_default -->
      <class name="HashTableTest_01d_emptyHashTable_putJ9_J9_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testContains_Invalid" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testContains_Valid" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_01d_emptyHashTable_putJ9_J9_default.testRemove_Invalid(HashTableTest_01d_emptyHashTable_putJ9_J9_default.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_default@1d057a39]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_01d_emptyHashTable_putJ9_J9_default -->
      <class name="HashTableTest_12j_C2_putI15_C2I15_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12j_C2_putI15_C2I15_default.testRemove_Invalid(HashTableTest_12j_C2_putI15_C2I15_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_default@3e6fa38a]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12j_C2_putI15_C2I15_default -->
      <class name="HashTableTest_12i_B1_putH14_B1H14_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testContains_Valid" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testContains_Valid" duration-ms="3" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetFrequency_Invalid" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="3" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="4" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetHash" duration-ms="3" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetMaxSize" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testIsEmpty" duration-ms="2" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12i_B1_putH14_B1H14_default.testRemove_Invalid(HashTableTest_12i_B1_putH14_B1H14_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_default@47c62251]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12i_B1_putH14_B1H14_default -->
      <class name="HashTableTest_12t_M12_putF12_M12F12_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12t_M12_putF12_M12F12_default.testRemove_Invalid(HashTableTest_12t_M12_putF12_M12F12_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_default@604ed9f0]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
      </class> <!-- HashTableTest_12t_M12_putF12_M12F12_default -->
      <class name="HashTableTest_12g_L11_putM12_L11M12_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="3" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="3" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetNumProbes" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12g_L11_putM12_L11M12_default.testRemove_Invalid(HashTableTest_12g_L11_putM12_L11M12_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_default@27efef64]" name="testSize" duration-ms="3" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12g_L11_putM12_L11M12_default -->
      <class name="HashTableTest_12p_I8_putA21_I8A21_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12p_I8_putA21_I8A21_default.testRemove_Invalid(HashTableTest_12p_I8_putA21_I8A21_default.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:35Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_default@1bce4f0a]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:35Z" finished-at="2018-10-28T04:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12p_I8_putA21_I8A21_default -->
      <class name="HashTableTest_11b_D3_putD3_D3_default">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testGetHash" duration-ms="3" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testGetLoadFactor" duration-ms="3" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testGetMaxSize" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testGetType" duration-ms="5" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testRemove_Invalid" duration-ms="5" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_11b_D3_putD3_D3_default.testRemove_Invalid(HashTableTest_11b_D3_putD3_D3_default.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_default@5b275dab]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_11b_D3_putD3_D3_default -->
      <class name="HashTableTest_10e_I8_removeI8_emptyHashTable_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testContains" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testGetFrequency" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testRemove" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10e_I8_removeI8_emptyHashTable_default.testRemove(HashTableTest_10e_I8_removeI8_emptyHashTable_default.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_default@d8355a8]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10e_I8_removeI8_emptyHashTable_default -->
      <class name="HashTableTest_11a_A0_putA0_A0_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_11a_A0_putA0_A0_default.testRemove_Invalid(HashTableTest_11a_A0_putA0_A0_default.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_default@523884b2]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:34Z" finished-at="2018-10-28T04:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_11a_A0_putA0_A0_default -->
      <class name="HashTableTest_01b_emptyHashTable_putD3_D3_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testClear" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testContains_Valid" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testGetNumProbes" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testGetType" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_01b_emptyHashTable_putD3_D3_default.testRemove_Invalid(HashTableTest_01b_emptyHashTable_putD3_D3_default.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="4" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_default@2b98378d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_01b_emptyHashTable_putD3_D3_default -->
      <class name="HashTableTest_10a_A0_removeA0_emptyHashTable_default">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testGetFrequency" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testGetNumDuplicates" duration-ms="4" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testGetNumProbes" duration-ms="3" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testRemove" duration-ms="2" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10a_A0_removeA0_emptyHashTable_default.testRemove(HashTableTest_10a_A0_removeA0_emptyHashTable_default.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_default@4c70fda8]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:33Z" finished-at="2018-10-28T04:15:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10a_A0_removeA0_emptyHashTable_default -->
    </test> <!-- Hash Table Tests with Default Settings -->
    <test name="Hash Table Tests with alpha = 0.75, capacity = 13, using Double Hashing" duration-ms="1556" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:38Z">
      <class name="HashTableTest_12p_I8_putA21_I8A21_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12p_I8_putA21_I8A21_75_13_double.testRemove_Invalid(HashTableTest_12p_I8_putA21_I8A21_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12p_I8_putA21_I8A21_75_13_double@2ac273d3]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12p_I8_putA21_I8A21_75_13_double -->
      <class name="HashTableTest_12a_A0_putB1_A0B1_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12a_A0_putB1_A0B1_75_13_double.testRemove_Invalid(HashTableTest_12a_A0_putB1_A0B1_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12a_A0_putB1_A0B1_75_13_double@31dc339b]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
      </class> <!-- HashTableTest_12a_A0_putB1_A0B1_75_13_double -->
      <class name="HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double.testRemove_Invalid(HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double@5025a98f]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_01b_emptyHashTable_putD3_D3_75_13_double -->
      <class name="HashTableTest_12n_G6_putM19_G6M19_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12n_G6_putM19_G6M19_75_13_double.testRemove_Invalid(HashTableTest_12n_G6_putM19_G6M19_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12n_G6_putM19_G6M19_75_13_double@4fe3c938]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
      </class> <!-- HashTableTest_12n_G6_putM19_G6M19_75_13_double -->
      <class name="HashTableTest_12q_J9_putB22_J9B22_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12q_J9_putB22_J9B22_75_13_double.testRemove_Invalid(HashTableTest_12q_J9_putB22_J9B22_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12q_J9_putB22_J9B22_75_13_double@71423665]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12q_J9_putB22_J9B22_75_13_double -->
      <class name="HashTableTest_11b_D3_putD3_D3_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_11b_D3_putD3_D3_75_13_double.testRemove_Invalid(HashTableTest_11b_D3_putD3_D3_75_13_double.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11b_D3_putD3_D3_75_13_double@1e127982]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_11b_D3_putD3_D3_75_13_double -->
      <class name="HashTableTest_12u_N13_putFG13_N13G13_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:38Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12u_N13_putFG13_N13G13_75_13_double.testRemove_Invalid(HashTableTest_12u_N13_putFG13_N13G13_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:38Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:38Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12u_N13_putFG13_N13G13_75_13_double@3632be31]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:38Z" finished-at="2018-10-28T04:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12u_N13_putFG13_N13G13_75_13_double -->
      <class name="HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testGetFrequency" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testRemove" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double.testRemove(HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double@7e0b0338]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10h_N13_removeN13_emptyHashTable_75_13_double -->
      <class name="HashTableTest_12r_K10_putD10_K10D10_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12r_K10_putD10_K10D10_75_13_double.testRemove_Invalid(HashTableTest_12r_K10_putD10_K10D10_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12r_K10_putD10_K10D10_75_13_double@20398b7c]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12r_K10_putD10_K10D10_75_13_double -->
      <class name="HashTableTest_12t_M12_putF12_M12F12_75_13_double">
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12t_M12_putF12_M12F12_75_13_double.testRemove_Invalid(HashTableTest_12t_M12_putF12_M12F12_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12t_M12_putF12_M12F12_75_13_double@56235b8e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12t_M12_putF12_M12F12_75_13_double -->
      <class name="HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testContains" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testGetFrequency" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testRemove" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double.testRemove(HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double@55d56113]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_10c_E4_removeE4_emptyHashTable_75_13_double -->
      <class name="HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double.testRemove_Invalid(HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double@2d928643]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_01a_emptyHashTable_putA0_A0_75_13_double -->
      <class name="HashTableTest_11d_J9_putJ9_J9_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_11d_J9_putJ9_J9_75_13_double.testRemove_Invalid(HashTableTest_11d_J9_putJ9_J9_75_13_double.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11d_J9_putJ9_J9_75_13_double@2038ae61]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_11d_J9_putJ9_J9_75_13_double -->
      <class name="HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testGetFrequency" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testRemove" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double.testRemove(HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double@148080bb]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10d_G6_removeG6_emptyHashTable_75_13_double -->
      <class name="HashTableTest_12h_A0_putG13_A0G13_75_13_double">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="2" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12h_A0_putG13_A0G13_75_13_double.testRemove_Invalid(HashTableTest_12h_A0_putG13_A0G13_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12h_A0_putG13_A0G13_75_13_double@4e1d422d]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12h_A0_putG13_A0G13_75_13_double -->
      <class name="HashTableTest_12m_F5_putL18_F5L18_75_13_double">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testContains_Valid" duration-ms="2" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12m_F5_putL18_F5L18_75_13_double.testRemove_Invalid(HashTableTest_12m_F5_putL18_F5L18_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12m_F5_putL18_F5L18_75_13_double@5ec0a365]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12m_F5_putL18_F5L18_75_13_double -->
      <class name="HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testGetFrequency" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testRemove" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double.testRemove(HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double@dc24521]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10e_I8_removeI8_emptyHashTable_75_13_double -->
      <class name="HashTableTest_12d_G6_putH7_G6H7_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12d_G6_putH7_G6H7_75_13_double.testRemove_Invalid(HashTableTest_12d_G6_putH7_G6H7_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[G]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12d_G6_putH7_G6H7_75_13_double@71318ec4]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12d_G6_putH7_G6H7_75_13_double -->
      <class name="HashTableTest_0_newTable_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testGetFrequency" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testGetMaxSize" duration-ms="3" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testRemove" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_0_newTable_75_13_double.testRemove(HashTableTest_0_newTable_75_13_double.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_0_newTable_75_13_double@6adede5]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_0_newTable_75_13_double -->
      <class name="HashTableTest_12b_C2_putD3_C2D3_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="4" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testPut" duration-ms="2" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12b_C2_putD3_C2D3_75_13_double.testRemove_Invalid(HashTableTest_12b_C2_putD3_C2D3_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12b_C2_putD3_C2D3_75_13_double@544fe44c]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12b_C2_putD3_C2D3_75_13_double -->
      <class name="HashTableTest_12l_E4_putK17_E4K17_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="194" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12l_E4_putK17_E4K17_75_13_double.testRemove_Invalid(HashTableTest_12l_E4_putK17_E4K17_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12l_E4_putK17_E4K17_75_13_double@78c03f1f]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12l_E4_putK17_E4K17_75_13_double -->
      <class name="HashTableTest_12i_B1_putH14_B1H14_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12i_B1_putH14_B1H14_75_13_double.testRemove_Invalid(HashTableTest_12i_B1_putH14_B1H14_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12i_B1_putH14_B1H14_75_13_double@66480dd7]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12i_B1_putH14_B1H14_75_13_double -->
      <class name="HashTableTest_11a_A0_putA0_A0_75_13_double">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testGetFrequency_Invalid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_11a_A0_putA0_A0_75_13_double.testRemove_Invalid(HashTableTest_11a_A0_putA0_A0_75_13_double.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11a_A0_putA0_A0_75_13_double@617faa95]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_11a_A0_putA0_A0_75_13_double -->
      <class name="HashTableTest_12k_D3_putJ16_D3J16_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetNumProbes" duration-ms="2" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12k_D3_putJ16_D3J16_75_13_double.testRemove_Invalid(HashTableTest_12k_D3_putJ16_D3J16_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[D]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12k_D3_putJ16_D3J16_75_13_double@5ce81285]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12k_D3_putJ16_D3J16_75_13_double -->
      <class name="HashTableTest_12f_K10_putL11_K10L11_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetNumDuplicates" duration-ms="10" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12f_K10_putL11_K10L11_75_13_double.testRemove_Invalid(HashTableTest_12f_K10_putL11_K10L11_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[K]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12f_K10_putL11_K10L11_75_13_double@a67c67e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12f_K10_putL11_K10L11_75_13_double -->
      <class name="HashTableTest_12j_C2_putI15_C2I15_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12j_C2_putI15_C2I15_75_13_double.testRemove_Invalid(HashTableTest_12j_C2_putI15_C2I15_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12j_C2_putI15_C2I15_75_13_double@52a86356]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12j_C2_putI15_C2I15_75_13_double -->
      <class name="HashTableTest_12o_H7_putN20_H7N20_75_13_double">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetFrequency_Valid" duration-ms="2" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="3" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="4" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="8" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12o_H7_putN20_H7N20_75_13_double.testRemove_Invalid(HashTableTest_12o_H7_putN20_H7N20_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[H]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12o_H7_putN20_H7N20_75_13_double@5383967b]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12o_H7_putN20_H7N20_75_13_double -->
      <class name="HashTableTest_12c_E4_putF5_E4F5_75_13_double">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12c_E4_putF5_E4F5_75_13_double.testRemove_Invalid(HashTableTest_12c_E4_putF5_E4F5_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[F]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12c_E4_putF5_E4F5_75_13_double@31610302]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12c_E4_putF5_E4F5_75_13_double -->
      <class name="HashTableTest_12e_I8_putJ9_I8J9_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetLoadFactor" duration-ms="3" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[I]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12e_I8_putJ9_I8J9_75_13_double.testRemove_Invalid(HashTableTest_12e_I8_putJ9_I8J9_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[J]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12e_I8_putJ9_I8J9_75_13_double@21213b92]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_12e_I8_putJ9_I8J9_75_13_double -->
      <class name="HashTableTest_11e_M12_putM12_M12_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_11e_M12_putM12_M12_75_13_double.testRemove_Invalid(HashTableTest_11e_M12_putM12_M12_75_13_double.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11e_M12_putM12_M12_75_13_double@3c0f93f1]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_11e_M12_putM12_M12_75_13_double -->
      <class name="HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testGetNumProbes" duration-ms="2" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testPut" duration-ms="2" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double.testRemove_Invalid(HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="2" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double@192b07fd]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_01e_emptyHashTable_putM12_M12_75_13_double -->
      <class name="HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testGetFrequency" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testRemove" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double.testRemove(HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double@6e1ec318]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_10g_M12_removeM12_emptyHashTable_75_13_double -->
      <class name="HashTableTest_11c_G6_putG6_G6_75_13_double">
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_11c_G6_putG6_G6_75_13_double.testRemove_Invalid(HashTableTest_11c_G6_putG6_G6_75_13_double.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testRemove_Valid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_11c_G6_putG6_G6_75_13_double@60c6f5b]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_11c_G6_putG6_G6_75_13_double -->
      <class name="HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double.testRemove_Invalid(HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double@20322d26]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_01d_emptyHashTable_putJ9_J9_75_13_double -->
      <class name="HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testGetFrequency" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testRemove" duration-ms="2" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double.testRemove(HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double@64bf3bbf]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10b_C2_removeC2_emptyHashTable_75_13_double -->
      <class name="HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testContains" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testGetFrequency" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testRemove" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double.testRemove(HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double@64bfbc86]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10a_A0_removeA0_emptyHashTable_75_13_double -->
      <class name="HashTableTest_12s_L11_putE11_L11E11_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12s_L11_putE11_L11E11_75_13_double.testRemove_Invalid(HashTableTest_12s_L11_putE11_L11E11_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[E]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12s_L11_putE11_L11E11_75_13_double@6fc6f14e]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
      </class> <!-- HashTableTest_12s_L11_putE11_L11E11_75_13_double -->
      <class name="HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testClear" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testContains" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testGetFrequency" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testGetLoadFactor" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testRemove" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double.testRemove(HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double@10bdf5e5]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_10f_K10_removeK10_emptyHashTable_75_13_double -->
      <class name="HashTableTest_12g_L11_putM12_L11M12_75_13_double">
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testContains_Invalid" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testContains_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetCapacity" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetFrequency_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Valid(java.lang.Character, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetFrequency_Valid" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="validFrequencies" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="1" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="testGetHash(int, int, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="expectedHashes" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetMaxSize" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetNumDuplicates" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetNumProbes" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testGetType" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testIsEmpty" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testPut" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testRemove_Invalid" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_12g_L11_putM12_L11M12_75_13_double.testRemove_Invalid(HashTableTest_12g_L11_putM12_L11M12_75_13_double.java:113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[L]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testSize" duration-ms="1" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:37Z" finished-at="2018-10-28T04:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid(java.lang.Character, int)[pri:0, instance:HashTableTest_12g_L11_putM12_L11M12_75_13_double@3327bd23]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:37Z" data-provider="validValuesKeys" finished-at="2018-10-28T04:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[M]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
      </class> <!-- HashTableTest_12g_L11_putM12_L11M12_75_13_double -->
      <class name="HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double">
        <test-method status="PASS" signature="testClear()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testClear" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Invalid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testContains_Invalid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testContains_Valid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testContains_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetCapacity()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testGetCapacity" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCapacity -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetFrequency_Invalid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testGetFrequency_Invalid" duration-ms="2" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Invalid -->
        <test-method status="PASS" signature="testGetFrequency_Valid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testGetFrequency_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFrequency_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetHash()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testGetHash" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetHash -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetLoadFactor()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testGetLoadFactor" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLoadFactor -->
        <test-method status="PASS" signature="testGetMaxSize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testGetMaxSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetMaxSize -->
        <test-method status="PASS" signature="testGetNumDuplicates()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testGetNumDuplicates" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumDuplicates -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetNumProbes()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testGetNumProbes" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNumProbes -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testGetType()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testGetType" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetType -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testPut()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testPut" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPut -->
        <test-method status="PASS" signature="testIsEmpty()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testIsEmpty" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Invalid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testRemove_Invalid" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at HashTable.remove(HashTable.java:153)
at TestCase.remove(TestCase.java:155)
at HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double.testRemove_Invalid(HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Invalid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="1" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testRemove_Valid()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testRemove_Valid" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_Valid -->
        <test-method status="PASS" signature="initialize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="initialize" is-config="true" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="testSize()[pri:0, instance:HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double@49993335]" name="testSize" duration-ms="0" started-at="2018-10-28T04:15:36Z" finished-at="2018-10-28T04:15:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
      </class> <!-- HashTableTest_01c_emptyHashTable_putG6_G6_75_13_double -->
    </test> <!-- Hash Table Tests with alpha = 0.75, capacity = 13, using Double Hashing -->
  </suite> <!-- Hash Table Testing Suite -->
</testng-results>
