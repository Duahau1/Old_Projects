<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-A53R77R" ignored="0" tests="9" failures="0" timestamp="26 Aug 2018 22:47:26 GMT" time="0.156" errors="0">
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_1_emptyCache">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;cacheSize&amp;apos; is required by BeforeMethod on method initialize but has not been marked @Optional or defined
in C:\Users\nguye\AppData\Local\Temp\testng-eclipse--1872302325\testng-customsuite.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'cacheSize' is required by BeforeMethod on method initialize but has not been marked @Optional or defined
in C:\Users\nguye\AppData\Local\Temp\testng-eclipse--1872302325\testng-customsuite.xml
at org.testng.internal.Parameters.createParams(Parameters.java:290)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:359)
at org.testng.internal.Parameters.createParameters(Parameters.java:620)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:520)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="@BeforeMethod initialize" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase name="testAdd" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase name="testClear" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- testClear -->
  <testcase name="testGet" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- testGet -->
  <testcase name="testGetHitRate" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- testGetHitRate -->
  <testcase name="testGetMissRate" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- testGetMissRate -->
  <testcase name="testIsEmpty" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase name="testRemove" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- testRemove -->
  <testcase name="testRemoveLast" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase name="testWrite" time="0.0" classname="Test_1_emptyCache">
    <skipped/>
  </testcase> <!-- testWrite -->
</testsuite>
